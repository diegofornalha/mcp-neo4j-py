#!/usr/bin/env python3
"""Teste final do MCP Neo4j"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from mcp_neo4j.server import neo4j_conn, search_memories, create_memory, list_memory_labels
from datetime import datetime
import json

print("üîç Testando fun√ß√µes MCP diretamente...\n")

# Teste 1: Listar labels
print("1Ô∏è‚É£ Listando labels...")
try:
    labels = list_memory_labels()
    print(f"   ‚úÖ {len(labels)} labels encontrados:")
    for label in labels[:3]:
        print(f"      - {label['label']}: {label['count']} n√≥s")
except Exception as e:
    print(f"   ‚ùå Erro: {e}")

# Teste 2: Buscar mem√≥rias
print("\n2Ô∏è‚É£ Buscando mem√≥rias...")
try:
    memories = search_memories(limit=2)
    print(f"   ‚úÖ {len(memories)} mem√≥rias encontradas")
    for mem in memories:
        print(f"      - [{mem['labels'][0]}] {mem['properties'].get('name', 'Sem nome')}")
except Exception as e:
    print(f"   ‚ùå Erro: {e}")

# Teste 3: Criar mem√≥ria de teste
print("\n3Ô∏è‚É£ Criando mem√≥ria de teste...")
try:
    test_memory = create_memory(
        label="TestResult",
        properties={
            "name": "MCP Test Result",
            "description": "Teste do funcionamento do MCP ap√≥s corre√ß√µes",
            "test_date": datetime.now().isoformat(),
            "status": "success",
            "corrections_applied": [
                "DateTime serialization fix",
                "Cypher query syntax fix"
            ]
        }
    )
    print(f"   ‚úÖ Mem√≥ria criada: ID={test_memory['id']}")
    
    # Verificar se foi serializada corretamente
    json_test = json.dumps(test_memory, indent=2)
    print("   ‚úÖ Serializa√ß√£o JSON bem-sucedida")
    
except Exception as e:
    print(f"   ‚ùå Erro: {e}")
    import traceback
    traceback.print_exc()

print("\n" + "="*50)
print("üìä RESUMO DO TESTE:")
print("="*50)
print("‚úÖ MCP Neo4j est√° funcionando corretamente!")
print("‚úÖ Corre√ß√µes aplicadas com sucesso:")
print("   - Serializa√ß√£o de DateTime corrigida")
print("   - Query Cypher simplificada")
print("   - Conex√£o com Neo4j est√°vel")
print("\nüéØ O sistema est√° pronto para uso!")