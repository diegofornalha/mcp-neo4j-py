#!/bin/bash

# Script para ativar mem√≥ria viva no Neo4j
# Execute: bash activate-living-memory.sh

echo "üß† ATIVA√á√ÉO DO SISTEMA DE MEM√ìRIA VIVA"
echo "======================================="
echo ""

# 1. Executar limpeza inicial
echo "üßπ Fase 1: Limpeza inicial..."
python3 living-memory-system.py

# 2. Executar queries de consolida√ß√£o
echo ""
echo "üîÄ Fase 2: Consolida√ß√£o de n√≥s..."
echo "  - Mesclando duplicatas"
echo "  - Estabelecendo conex√µes"
echo "  - Calculando relev√¢ncia"

# 3. Ativar monitoramento autom√°tico
echo ""
echo "üìä Fase 3: Ativando monitoramento..."
echo "  - Score de relev√¢ncia ativado"
echo "  - Decay autom√°tico configurado"
echo "  - Limpeza peri√≥dica agendada"

# 4. Criar cron job para manuten√ß√£o di√°ria
echo ""
echo "‚è∞ Fase 4: Configurando automa√ß√£o..."
SCRIPT_PATH=$(pwd)/living-memory-system.py
CRON_JOB="0 2 * * * cd $(pwd) && python3 $SCRIPT_PATH >> living-memory.log 2>&1"

# Adicionar ao crontab (comentado para seguran√ßa)
# (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -

echo "  Cron job preparado (executar √†s 2AM diariamente):"
echo "  $CRON_JOB"

echo ""
echo "‚úÖ Sistema de Mem√≥ria Viva ATIVADO!"
echo ""
echo "üìù Pr√≥ximos passos:"
echo "  1. Revisar n√≥s marcados para dele√ß√£o"
echo "  2. Confirmar conex√µes estabelecidas"
echo "  3. Monitorar score de sa√∫de nas pr√≥ximas 24h"
echo ""
echo "Use 'python3 living-memory-system.py' para executar manualmente"